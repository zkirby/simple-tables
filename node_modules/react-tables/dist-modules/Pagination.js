'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var Pagination = (function (_React$Component) {
  function Pagination() {
    _classCallCheck(this, Pagination);

    _get(Object.getPrototypeOf(Pagination.prototype), 'constructor', this).call(this);

    this.state = {
      pageNumber: 1
    };

    this.onPageFirst = this.onPageFirst.bind(this);
    this.pagine = this.pagine.bind(this);
  }

  _inherits(Pagination, _React$Component);

  _createClass(Pagination, [{
    key: 'onPageFirst',
    value: function onPageFirst() {
      this.updatePagination({
        pageNumber: 1
      });
    }
  }, {
    key: 'onPageLast',
    value: function onPageLast(lastPage) {
      this.updatePagination({
        pageNumber: lastPage
      });
    }
  }, {
    key: 'onPageNumber',
    value: function onPageNumber(number) {
      this.updatePagination({
        pageNumber: number
      });
    }
  }, {
    key: 'updatePagination',
    value: function updatePagination(params) {
      this.setState(params);
      this.context.fetch(params);
    }
  }, {
    key: 'calcule',
    value: function calcule() {
      var _context = this.context;
      var totalRows = _context.totalRows;
      var pageSize = _context.pageSize;
      var pageNumber = this.state.pageNumber;

      var totalPages = ~ ~((totalRows - 1) / pageSize) + 1;
      var from = undefined,
          to = undefined;

      if (totalPages) {
        from = 1;
        to = totalPages;
      } else {
        from = pageNumber - 2;
        to = from + 4;

        if (from < 1) {
          from = 1;
          to = 5;
        }

        if (to > totalPages) {
          to = totalPages;
          from = to - 4;
        }
      }

      return {
        totalPages: totalPages,
        from: from,
        to: to
      };
    }
  }, {
    key: 'pagine',
    value: function pagine(from, to, pageNumber) {
      var pages = [];

      for (var i = from; i <= to; i++) {
        var classes = i === pageNumber ? ' active' : '';
        pages.push(_react2['default'].createElement(
          'li',
          { className: classes, key: i },
          _react2['default'].createElement(
            'a',
            { onClick: this.onPageNumber.bind(this, i) },
            i
          )
        ));
      }

      return pages;
    }
  }, {
    key: 'render',
    value: function render() {
      var pageNumber = this.state.pageNumber;

      var _calcule = this.calcule();

      var from = _calcule.from;
      var to = _calcule.to;
      var totalPages = _calcule.totalPages;

      return _react2['default'].createElement(
        'div',
        null,
        _react2['default'].createElement(
          'ul',
          { className: 'pagination' },
          _react2['default'].createElement(
            'li',
            { className: pageNumber <= 1 ? 'disabled' : '' },
            _react2['default'].createElement(
              'a',
              { href: '#', 'aria-label': 'Previous', onClick: this.onPageFirst },
              _react2['default'].createElement(
                'span',
                { 'aria-hidden': 'true' },
                '«'
              )
            )
          ),
          this.pagine(from, to, pageNumber),
          _react2['default'].createElement(
            'li',
            { className: pageNumber >= totalPages ? 'disabled' : '' },
            _react2['default'].createElement(
              'a',
              { href: '#', 'aria-label': 'Next', onClick: this.onPageLast.bind(this, totalPages) },
              _react2['default'].createElement(
                'span',
                { 'aria-hidden': 'true' },
                '»'
              )
            )
          )
        )
      );
    }
  }], [{
    key: 'contextTypes',
    value: {
      totalRows: _react2['default'].PropTypes.number,
      pageSize: _react2['default'].PropTypes.number,
      fetch: _react2['default'].PropTypes.func
    },
    enumerable: true
  }]);

  return Pagination;
})(_react2['default'].Component);

exports['default'] = Pagination;
module.exports = exports['default'];