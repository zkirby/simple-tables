'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x2, _x3, _x4) { var _again = true; _function: while (_again) { var object = _x2, property = _x3, receiver = _x4; desc = parent = getter = undefined; _again = false; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x2 = parent; _x3 = property; _x4 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _TableHead = require('./TableHead');

var _TableHead2 = _interopRequireDefault(_TableHead);

var _TableBody = require('./TableBody');

var _TableBody2 = _interopRequireDefault(_TableBody);

var _Pagination = require('./Pagination');

var _Pagination2 = _interopRequireDefault(_Pagination);

function noop() {}

var Table = (function (_React$Component) {
  function Table(props) {
    _classCallCheck(this, Table);

    _get(Object.getPrototypeOf(Table.prototype), 'constructor', this).call(this);

    this.state = {
      rows: [],
      loading: true,
      totalRows: props.totalRows,
      dimentions: {
        height: '90%'
      }
    };

    this.fetch = this.fetch.bind(this);
    this.setData = this.setData.bind(this);
  }

  _inherits(Table, _React$Component);

  _createClass(Table, [{
    key: 'getChildContext',
    value: function getChildContext() {
      var context = {
        rows: this.state.rows,
        columns: this.props.columns,
        loading: this.state.loading,
        fixedHead: this.props.fixedHead,
        totalRows: this.state.totalRows,
        pageSize: this.props.pageSize,
        fetch: this.fetch,
        classes: this.props.classes,
        dimentions: this.state.dimentions,
        prefix: this.props.prefix
      };

      return context;
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.fetch();

      if (!this.props.pagination) return;

      var el = _react2['default'].findDOMNode(this);
      var _head = _react2['default'].findDOMNode(this.refs._head);
      var _pagination = _react2['default'].findDOMNode(this.refs._pagination);
      var height = el.parentElement.clientHeight - _head.offsetHeight - _pagination.offsetHeight - 10;

      this.setState({
        dimentions: { height: height }
      });
    }
  }, {
    key: 'fetch',
    value: function fetch() {
      var params = arguments[0] === undefined ? {} : arguments[0];

      var options = {};

      if (this.props.pagination) {
        options = {
          limit: this.props.pageSize,
          skip: this.props.pageSize * ((params.pageNumber || 1) - 1)
        };
      }

      this.setState({
        loading: true
      });

      this.props.getData(options);
    }
  }, {
    key: 'setData',
    value: function setData(rows, totalRows) {
      this.setState({
        rows: rows,
        totalRows: totalRows,
        loading: false
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props;
      var classes = _props.classes;
      var pagination = _props.pagination;

      return _react2['default'].createElement(
        'div',
        { style: { height: '100%' } },
        _react2['default'].createElement(_TableHead2['default'], { ref: '_head' }),
        _react2['default'].createElement(_TableBody2['default'], null),
        !pagination ? null : _react2['default'].createElement(_Pagination2['default'], { ref: '_pagination' })
      );
    }
  }], [{
    key: 'propTypes',
    value: {
      columns: _react2['default'].PropTypes.array,
      pageNumber: _react2['default'].PropTypes.number,
      pageSize: _react2['default'].PropTypes.number,
      classes: _react2['default'].PropTypes.string,
      getData: _react2['default'].PropTypes.func,
      fixedHead: _react2['default'].PropTypes.bool,
      prefix: _react2['default'].PropTypes.string,
      pagination: _react2['default'].PropTypes.bool
    },
    enumerable: true
  }, {
    key: 'childContextTypes',
    value: {
      rows: _react2['default'].PropTypes.array,
      columns: _react2['default'].PropTypes.array,
      loading: _react2['default'].PropTypes.bool,
      fixedHead: _react2['default'].PropTypes.bool,
      totalRows: _react2['default'].PropTypes.number,
      pageSize: _react2['default'].PropTypes.number,
      fetch: _react2['default'].PropTypes.func,
      classes: _react2['default'].PropTypes.string,
      dimentions: _react2['default'].PropTypes.object,
      prefix: _react2['default'].PropTypes.string
    },
    enumerable: true
  }, {
    key: 'defaultProps',
    value: {
      pageNumber: 1,
      pageSize: 10,
      totalRows: 0,
      classes: 'table table-hover table-bordered',
      fixedHead: true,
      columns: [],
      getData: noop,
      prefix: 'react-tables',
      pagination: true
    },
    enumerable: true
  }]);

  return Table;
})(_react2['default'].Component);

exports['default'] = Table;
module.exports = exports['default'];